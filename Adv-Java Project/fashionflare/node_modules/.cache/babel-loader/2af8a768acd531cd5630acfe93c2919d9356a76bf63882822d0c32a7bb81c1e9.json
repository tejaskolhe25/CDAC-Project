{"ast":null,"code":"// import React, { useState, useEffect } from \"react\";\n// import { useNavigate } from \"react-router-dom\";\n// import ApiService from \"../../service/ApiService\";\n// import '../../style/profile.css';\n// import Pagination from \"../common/Pagination\";\n\n// const ProfilePage = () => {\n\n//     const [userInfo, setUserInfo] = useState(null);\n//     const [error, setError] = useState(null);\n//     const [currentPage, setCurrentPage] = useState(1);\n//     const itemsPerPage = 5;\n//     const navigate = useNavigate();\n\n//     useEffect(() => {\n\n//         fetchUserInfo();\n//     }, []);\n//     const fetchUserInfo = async () => {\n\n//         try {\n//             const response = await ApiService.getLoggedInUserInfo();\n//             setUserInfo(response.user);\n//         } catch (error) {\n//             setError(error.response?.data?.message || error.message || 'Unable to fetch user info');\n//         }\n//     }\n\n//     if (!userInfo) {\n//         return <div>Loading...</div>\n//     }\n\n//     const handleAddressClick = () => {\n//         navigate(userInfo.address ? '/edit-address' : '/add-address');\n//     }\n\n//     const orderItemList = userInfo.orderItemList || [];\n\n//     const totalPages = Math.ceil(orderItemList.length / itemsPerPage);\n\n//     const paginatedOrders = orderItemList.slice(\n//         (currentPage - 1) * itemsPerPage,\n//         currentPage * itemsPerPage\n//     );\n\n//     return (\n//         <div className=\"profile-page\">\n//             <h2>Welcome {userInfo.name}</h2>\n\n//             {error ? (\n//                 <p className=\"error-message\">{error}</p>\n//             ) : (\n//                 <div>\n//                     <p><strong>Name: </strong>{userInfo.name}</p>\n//                     <p><strong>Email: </strong>{userInfo.email}</p>\n//                     <p><strong>Phone Number: </strong>{userInfo.phoneNumber}</p>\n\n//                     <div>\n//                         <h3>Address</h3>\n//                         {userInfo.address ? (\n//                             <div>\n//                                 <p><strong>Street: </strong>{userInfo.address.street}</p>\n//                                 <p><strong>City: </strong>{userInfo.address.city}</p>\n//                                 <p><strong>State: </strong>{userInfo.address.state}</p>\n//                                 <p><strong>Zip Code: </strong>{userInfo.address.zipCode}</p>\n//                                 <p><strong>Country: </strong>{userInfo.address.country}</p>\n//                             </div>\n//                         ) : (\n//                             <p>No Address information available</p>\n//                         )}\n//                         <button className=\"profile-button\" onClick={handleAddressClick}>\n//                             {userInfo.address ? \"Edit Address\" : \"Add Address\"}\n//                         </button>\n//                     </div>\n//                     <h3>Order History</h3>\n//                     <ul>\n//                         {paginatedOrders.map(order => (\n//                             <li key={order.id}>\n//                                 <img src={order.product?.imageUrl} alt={order.product.name} />\n//                                 <div>\n//                                     <p><strong>Name: </strong>{order.product.name}</p>\n//                                     <p><strong>Status: </strong>{order.status}</p>\n//                                     <p><strong>Quantity: </strong>{order.quantity}</p>\n//                                     <p><strong>Price: </strong>{order.price.toFixed(2)}</p>\n//                                 </div>\n//                             </li>\n//                         ))}\n//                     </ul>\n//                     <Pagination\n//                     currentPage={currentPage}\n//                     totalPages={totalPages}\n//                     onPageChange={(page)=> setCurrentPage(page)}/>\n//                 </div>\n//             )}\n//         </div>\n//     )\n// }\n\n// export default ProfilePage;","map":{"version":3,"names":[],"sources":["C:/Users/Tejas Kolhe/Downloads/ecommerce/fashionflare/src/component/pages/ProfilePage.jsx"],"sourcesContent":["// import React, { useState, useEffect } from \"react\";\n// import { useNavigate } from \"react-router-dom\";\n// import ApiService from \"../../service/ApiService\";\n// import '../../style/profile.css';\n// import Pagination from \"../common/Pagination\";\n\n// const ProfilePage = () => {\n\n//     const [userInfo, setUserInfo] = useState(null);\n//     const [error, setError] = useState(null);\n//     const [currentPage, setCurrentPage] = useState(1);\n//     const itemsPerPage = 5;\n//     const navigate = useNavigate();\n\n\n//     useEffect(() => {\n\n//         fetchUserInfo();\n//     }, []);\n//     const fetchUserInfo = async () => {\n\n//         try {\n//             const response = await ApiService.getLoggedInUserInfo();\n//             setUserInfo(response.user);\n//         } catch (error) {\n//             setError(error.response?.data?.message || error.message || 'Unable to fetch user info');\n//         }\n//     }\n\n//     if (!userInfo) {\n//         return <div>Loading...</div>\n//     }\n\n//     const handleAddressClick = () => {\n//         navigate(userInfo.address ? '/edit-address' : '/add-address');\n//     }\n\n//     const orderItemList = userInfo.orderItemList || [];\n\n//     const totalPages = Math.ceil(orderItemList.length / itemsPerPage);\n\n//     const paginatedOrders = orderItemList.slice(\n//         (currentPage - 1) * itemsPerPage,\n//         currentPage * itemsPerPage\n//     );\n\n\n\n\n//     return (\n//         <div className=\"profile-page\">\n//             <h2>Welcome {userInfo.name}</h2>\n\n//             {error ? (\n//                 <p className=\"error-message\">{error}</p>\n//             ) : (\n//                 <div>\n//                     <p><strong>Name: </strong>{userInfo.name}</p>\n//                     <p><strong>Email: </strong>{userInfo.email}</p>\n//                     <p><strong>Phone Number: </strong>{userInfo.phoneNumber}</p>\n\n//                     <div>\n//                         <h3>Address</h3>\n//                         {userInfo.address ? (\n//                             <div>\n//                                 <p><strong>Street: </strong>{userInfo.address.street}</p>\n//                                 <p><strong>City: </strong>{userInfo.address.city}</p>\n//                                 <p><strong>State: </strong>{userInfo.address.state}</p>\n//                                 <p><strong>Zip Code: </strong>{userInfo.address.zipCode}</p>\n//                                 <p><strong>Country: </strong>{userInfo.address.country}</p>\n//                             </div>\n//                         ) : (\n//                             <p>No Address information available</p>\n//                         )}\n//                         <button className=\"profile-button\" onClick={handleAddressClick}>\n//                             {userInfo.address ? \"Edit Address\" : \"Add Address\"}\n//                         </button>\n//                     </div>\n//                     <h3>Order History</h3>\n//                     <ul>\n//                         {paginatedOrders.map(order => (\n//                             <li key={order.id}>\n//                                 <img src={order.product?.imageUrl} alt={order.product.name} />\n//                                 <div>\n//                                     <p><strong>Name: </strong>{order.product.name}</p>\n//                                     <p><strong>Status: </strong>{order.status}</p>\n//                                     <p><strong>Quantity: </strong>{order.quantity}</p>\n//                                     <p><strong>Price: </strong>{order.price.toFixed(2)}</p>\n//                                 </div>\n//                             </li>\n//                         ))}\n//                     </ul>\n//                     <Pagination\n//                     currentPage={currentPage}\n//                     totalPages={totalPages}\n//                     onPageChange={(page)=> setCurrentPage(page)}/>\n//                 </div>\n//             )}\n//         </div>\n//     )\n// }\n\n// export default ProfilePage;\n\n\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAGA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;;AAKA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}