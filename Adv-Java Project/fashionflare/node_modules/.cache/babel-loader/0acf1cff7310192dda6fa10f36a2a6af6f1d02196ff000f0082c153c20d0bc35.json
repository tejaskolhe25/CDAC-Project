{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Tejas Kolhe\\\\Downloads\\\\ecommerce\\\\fashionflare\\\\src\\\\component\\\\pages\\\\ProfilePage.jsx\",\n  _s = $RefreshSig$();\n// import React, { useState, useEffect } from \"react\";\n// import { useNavigate } from \"react-router-dom\";\n// import ApiService from \"../../service/ApiService\";\n// import '../../style/profile.css';\n// import Pagination from \"../common/Pagination\";\n\n// const ProfilePage = () => {\n\n//     const [userInfo, setUserInfo] = useState(null);\n//     const [error, setError] = useState(null);\n//     const [currentPage, setCurrentPage] = useState(1);\n//     const itemsPerPage = 5;\n//     const navigate = useNavigate();\n\n//     useEffect(() => {\n\n//         fetchUserInfo();\n//     }, []);\n//     const fetchUserInfo = async () => {\n\n//         try {\n//             const response = await ApiService.getLoggedInUserInfo();\n//             setUserInfo(response.user);\n//         } catch (error) {\n//             setError(error.response?.data?.message || error.message || 'Unable to fetch user info');\n//         }\n//     }\n\n//     if (!userInfo) {\n//         return <div>Loading...</div>\n//     }\n\n//     const handleAddressClick = () => {\n//         navigate(userInfo.address ? '/edit-address' : '/add-address');\n//     }\n\n//     const orderItemList = userInfo.orderItemList || [];\n\n//     const totalPages = Math.ceil(orderItemList.length / itemsPerPage);\n\n//     const paginatedOrders = orderItemList.slice(\n//         (currentPage - 1) * itemsPerPage,\n//         currentPage * itemsPerPage\n//     );\n\n//     return (\n//         <div className=\"profile-page\">\n//             <h2>Welcome {userInfo.name}</h2>\n\n//             {error ? (\n//                 <p className=\"error-message\">{error}</p>\n//             ) : (\n//                 <div>\n//                     <p><strong>Name: </strong>{userInfo.name}</p>\n//                     <p><strong>Email: </strong>{userInfo.email}</p>\n//                     <p><strong>Phone Number: </strong>{userInfo.phoneNumber}</p>\n\n//                     <div>\n//                         <h3>Address</h3>\n//                         {userInfo.address ? (\n//                             <div>\n//                                 <p><strong>Street: </strong>{userInfo.address.street}</p>\n//                                 <p><strong>City: </strong>{userInfo.address.city}</p>\n//                                 <p><strong>State: </strong>{userInfo.address.state}</p>\n//                                 <p><strong>Zip Code: </strong>{userInfo.address.zipCode}</p>\n//                                 <p><strong>Country: </strong>{userInfo.address.country}</p>\n//                             </div>\n//                         ) : (\n//                             <p>No Address information available</p>\n//                         )}\n//                         <button className=\"profile-button\" onClick={handleAddressClick}>\n//                             {userInfo.address ? \"Edit Address\" : \"Add Address\"}\n//                         </button>\n//                     </div>\n//                     <h3>Order History</h3>\n//                     <ul>\n//                         {paginatedOrders.map(order => (\n//                             <li key={order.id}>\n//                                 <img src={order.product?.imageUrl} alt={order.product.name} />\n//                                 <div>\n//                                     <p><strong>Name: </strong>{order.product.name}</p>\n//                                     <p><strong>Status: </strong>{order.status}</p>\n//                                     <p><strong>Quantity: </strong>{order.quantity}</p>\n//                                     <p><strong>Price: </strong>{order.price.toFixed(2)}</p>\n//                                 </div>\n//                             </li>\n//                         ))}\n//                     </ul>\n//                     <Pagination\n//                     currentPage={currentPage}\n//                     totalPages={totalPages}\n//                     onPageChange={(page)=> setCurrentPage(page)}/>\n//                 </div>\n//             )}\n//         </div>\n//     )\n// }\n\n// export default ProfilePage;\n\nimport React, { useState, useEffect } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport ApiService from \"../../service/ApiService\";\nimport '../../style/profile.css';\nimport Pagination from \"../common/Pagination\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ProfilePage = () => {\n  _s();\n  const [userInfo, setUserInfo] = useState(null);\n  const [error, setError] = useState(null);\n  const [currentPage, setCurrentPage] = useState(1);\n  const [isEditing, setIsEditing] = useState(false);\n  const [updatedUserInfo, setUpdatedUserInfo] = useState({\n    name: '',\n    email: '',\n    phoneNumber: ''\n  });\n  const itemsPerPage = 5;\n  const navigate = useNavigate();\n  useEffect(() => {\n    fetchUserInfo();\n  }, []);\n  const fetchUserInfo = async () => {\n    try {\n      const response = await ApiService.getLoggedInUserInfo();\n      setUserInfo(response.user);\n      setUpdatedUserInfo({\n        name: response.user.name,\n        email: response.user.email,\n        phoneNumber: response.user.phoneNumber\n      });\n    } catch (error) {\n      var _error$response, _error$response$data;\n      setError(((_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.message) || error.message || 'Unable to fetch user info');\n    }\n  };\n  const handleInputChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setUpdatedUserInfo({\n      ...updatedUserInfo,\n      [name]: value\n    });\n  };\n  const handleEditClick = () => {\n    setIsEditing(true);\n  };\n  const handleSaveClick = async () => {\n    try {\n      const response = await ApiService.updateUserInfo(updatedUserInfo);\n      setUserInfo(response.user);\n      setIsEditing(false);\n    } catch (error) {\n      var _error$response2, _error$response2$data;\n      setError(((_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : (_error$response2$data = _error$response2.data) === null || _error$response2$data === void 0 ? void 0 : _error$response2$data.message) || error.message || 'Unable to update user info');\n    }\n  };\n  const handleAddressClick = () => {\n    navigate(userInfo.address ? '/edit-address' : '/add-address');\n  };\n  if (!userInfo) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 16\n    }, this);\n  }\n  const orderItemList = userInfo.orderItemList || [];\n  const totalPages = Math.ceil(orderItemList.length / itemsPerPage);\n  const paginatedOrders = orderItemList.slice((currentPage - 1) * itemsPerPage, currentPage * itemsPerPage);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"profile-page\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [\"Welcome \", userInfo.name]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 187,\n      columnNumber: 13\n    }, this), error ? /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"error-message\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 190,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"profile-info\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"profile-field\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Name:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 195,\n            columnNumber: 29\n          }, this), isEditing ? /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            name: \"name\",\n            value: updatedUserInfo.name,\n            onChange: handleInputChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 197,\n            columnNumber: 33\n          }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n            children: userInfo.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 204,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 194,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"profile-field\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Email:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 208,\n            columnNumber: 29\n          }, this), isEditing ? /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"email\",\n            name: \"email\",\n            value: updatedUserInfo.email,\n            onChange: handleInputChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 210,\n            columnNumber: 33\n          }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n            children: userInfo.email\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 217,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 207,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"profile-field\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Phone Number:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 221,\n            columnNumber: 29\n          }, this), isEditing ? /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            name: \"phoneNumber\",\n            value: updatedUserInfo.phoneNumber,\n            onChange: handleInputChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 223,\n            columnNumber: 33\n          }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n            children: userInfo.phoneNumber\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 230,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 220,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"profile-button\",\n          onClick: isEditing ? handleSaveClick : handleEditClick,\n          children: isEditing ? \"Save\" : \"Edit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 233,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 193,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Address\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 242,\n          columnNumber: 25\n        }, this), userInfo.address ? /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Street: \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 245,\n              columnNumber: 36\n            }, this), userInfo.address.street]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 245,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"City: \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 246,\n              columnNumber: 36\n            }, this), userInfo.address.city]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 246,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"State: \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 247,\n              columnNumber: 36\n            }, this), userInfo.address.state]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 247,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Zip Code: \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 248,\n              columnNumber: 36\n            }, this), userInfo.address.zipCode]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 248,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Country: \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 249,\n              columnNumber: 36\n            }, this), userInfo.address.country]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 249,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 244,\n          columnNumber: 29\n        }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"No Address information available\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 252,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"profile-button\",\n          onClick: handleAddressClick,\n          children: userInfo.address ? \"Edit Address\" : \"Add Address\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 254,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 241,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Order History\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 259,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: paginatedOrders.map(order => {\n          var _order$product;\n          return /*#__PURE__*/_jsxDEV(\"li\", {\n            children: [/*#__PURE__*/_jsxDEV(\"img\", {\n              src: (_order$product = order.product) === null || _order$product === void 0 ? void 0 : _order$product.imageUrl,\n              alt: order.product.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 263,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: \"Name: \"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 265,\n                  columnNumber: 40\n                }, this), order.product.name]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 265,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: \"Status: \"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 266,\n                  columnNumber: 40\n                }, this), order.status]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 266,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: \"Quantity: \"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 267,\n                  columnNumber: 40\n                }, this), order.quantity]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 267,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: \"Price: \"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 268,\n                  columnNumber: 40\n                }, this), order.price.toFixed(2)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 268,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 264,\n              columnNumber: 33\n            }, this)]\n          }, order.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 262,\n            columnNumber: 29\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 260,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(Pagination, {\n        currentPage: currentPage,\n        totalPages: totalPages,\n        onPageChange: page => setCurrentPage(page)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 273,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 192,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 186,\n    columnNumber: 9\n  }, this);\n};\n_s(ProfilePage, \"mxfLyU5ckilWZJCHGZWKi0sSsGw=\", false, function () {\n  return [useNavigate];\n});\n_c = ProfilePage;\nexport default ProfilePage;\nvar _c;\n$RefreshReg$(_c, \"ProfilePage\");","map":{"version":3,"names":["React","useState","useEffect","useNavigate","ApiService","Pagination","jsxDEV","_jsxDEV","ProfilePage","_s","userInfo","setUserInfo","error","setError","currentPage","setCurrentPage","isEditing","setIsEditing","updatedUserInfo","setUpdatedUserInfo","name","email","phoneNumber","itemsPerPage","navigate","fetchUserInfo","response","getLoggedInUserInfo","user","_error$response","_error$response$data","data","message","handleInputChange","e","value","target","handleEditClick","handleSaveClick","updateUserInfo","_error$response2","_error$response2$data","handleAddressClick","address","children","fileName","_jsxFileName","lineNumber","columnNumber","orderItemList","totalPages","Math","ceil","length","paginatedOrders","slice","className","type","onChange","onClick","street","city","state","zipCode","country","map","order","_order$product","src","product","imageUrl","alt","status","quantity","price","toFixed","id","onPageChange","page","_c","$RefreshReg$"],"sources":["C:/Users/Tejas Kolhe/Downloads/ecommerce/fashionflare/src/component/pages/ProfilePage.jsx"],"sourcesContent":["// import React, { useState, useEffect } from \"react\";\n// import { useNavigate } from \"react-router-dom\";\n// import ApiService from \"../../service/ApiService\";\n// import '../../style/profile.css';\n// import Pagination from \"../common/Pagination\";\n\n// const ProfilePage = () => {\n\n//     const [userInfo, setUserInfo] = useState(null);\n//     const [error, setError] = useState(null);\n//     const [currentPage, setCurrentPage] = useState(1);\n//     const itemsPerPage = 5;\n//     const navigate = useNavigate();\n\n\n//     useEffect(() => {\n\n//         fetchUserInfo();\n//     }, []);\n//     const fetchUserInfo = async () => {\n\n//         try {\n//             const response = await ApiService.getLoggedInUserInfo();\n//             setUserInfo(response.user);\n//         } catch (error) {\n//             setError(error.response?.data?.message || error.message || 'Unable to fetch user info');\n//         }\n//     }\n\n//     if (!userInfo) {\n//         return <div>Loading...</div>\n//     }\n\n//     const handleAddressClick = () => {\n//         navigate(userInfo.address ? '/edit-address' : '/add-address');\n//     }\n\n//     const orderItemList = userInfo.orderItemList || [];\n\n//     const totalPages = Math.ceil(orderItemList.length / itemsPerPage);\n\n//     const paginatedOrders = orderItemList.slice(\n//         (currentPage - 1) * itemsPerPage,\n//         currentPage * itemsPerPage\n//     );\n\n\n\n\n//     return (\n//         <div className=\"profile-page\">\n//             <h2>Welcome {userInfo.name}</h2>\n\n//             {error ? (\n//                 <p className=\"error-message\">{error}</p>\n//             ) : (\n//                 <div>\n//                     <p><strong>Name: </strong>{userInfo.name}</p>\n//                     <p><strong>Email: </strong>{userInfo.email}</p>\n//                     <p><strong>Phone Number: </strong>{userInfo.phoneNumber}</p>\n\n//                     <div>\n//                         <h3>Address</h3>\n//                         {userInfo.address ? (\n//                             <div>\n//                                 <p><strong>Street: </strong>{userInfo.address.street}</p>\n//                                 <p><strong>City: </strong>{userInfo.address.city}</p>\n//                                 <p><strong>State: </strong>{userInfo.address.state}</p>\n//                                 <p><strong>Zip Code: </strong>{userInfo.address.zipCode}</p>\n//                                 <p><strong>Country: </strong>{userInfo.address.country}</p>\n//                             </div>\n//                         ) : (\n//                             <p>No Address information available</p>\n//                         )}\n//                         <button className=\"profile-button\" onClick={handleAddressClick}>\n//                             {userInfo.address ? \"Edit Address\" : \"Add Address\"}\n//                         </button>\n//                     </div>\n//                     <h3>Order History</h3>\n//                     <ul>\n//                         {paginatedOrders.map(order => (\n//                             <li key={order.id}>\n//                                 <img src={order.product?.imageUrl} alt={order.product.name} />\n//                                 <div>\n//                                     <p><strong>Name: </strong>{order.product.name}</p>\n//                                     <p><strong>Status: </strong>{order.status}</p>\n//                                     <p><strong>Quantity: </strong>{order.quantity}</p>\n//                                     <p><strong>Price: </strong>{order.price.toFixed(2)}</p>\n//                                 </div>\n//                             </li>\n//                         ))}\n//                     </ul>\n//                     <Pagination\n//                     currentPage={currentPage}\n//                     totalPages={totalPages}\n//                     onPageChange={(page)=> setCurrentPage(page)}/>\n//                 </div>\n//             )}\n//         </div>\n//     )\n// }\n\n// export default ProfilePage;\n\n\n\n\n\n\nimport React, { useState, useEffect } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport ApiService from \"../../service/ApiService\";\nimport '../../style/profile.css';\nimport Pagination from \"../common/Pagination\";\n\nconst ProfilePage = () => {\n    const [userInfo, setUserInfo] = useState(null);\n    const [error, setError] = useState(null);\n    const [currentPage, setCurrentPage] = useState(1);\n    const [isEditing, setIsEditing] = useState(false);\n    const [updatedUserInfo, setUpdatedUserInfo] = useState({\n        name: '',\n        email: '',\n        phoneNumber: ''\n    });\n\n    const itemsPerPage = 5;\n    const navigate = useNavigate();\n\n    useEffect(() => {\n        fetchUserInfo();\n    }, []);\n\n    const fetchUserInfo = async () => {\n        try {\n            const response = await ApiService.getLoggedInUserInfo();\n            setUserInfo(response.user);\n            setUpdatedUserInfo({\n                name: response.user.name,\n                email: response.user.email,\n                phoneNumber: response.user.phoneNumber\n            });\n        } catch (error) {\n            setError(error.response?.data?.message || error.message || 'Unable to fetch user info');\n        }\n    };\n\n    const handleInputChange = (e) => {\n        const { name, value } = e.target;\n        setUpdatedUserInfo({\n            ...updatedUserInfo,\n            [name]: value\n        });\n    };\n\n    const handleEditClick = () => {\n        setIsEditing(true);\n    };\n\n    const handleSaveClick = async () => {\n        try {\n            const response = await ApiService.updateUserInfo(updatedUserInfo);\n            setUserInfo(response.user);\n            setIsEditing(false);\n        } catch (error) {\n            setError(error.response?.data?.message || error.message || 'Unable to update user info');\n        }\n    };\n\n    const handleAddressClick = () => {\n        navigate(userInfo.address ? '/edit-address' : '/add-address');\n    };\n\n    if (!userInfo) {\n        return <div>Loading...</div>;\n    }\n\n    const orderItemList = userInfo.orderItemList || [];\n    const totalPages = Math.ceil(orderItemList.length / itemsPerPage);\n    const paginatedOrders = orderItemList.slice(\n        (currentPage - 1) * itemsPerPage,\n        currentPage * itemsPerPage\n    );\n\n    return (\n        <div className=\"profile-page\">\n            <h2>Welcome {userInfo.name}</h2>\n\n            {error ? (\n                <p className=\"error-message\">{error}</p>\n            ) : (\n                <div>\n                    <div className=\"profile-info\">\n                        <div className=\"profile-field\">\n                            <label>Name:</label>\n                            {isEditing ? (\n                                <input\n                                    type=\"text\"\n                                    name=\"name\"\n                                    value={updatedUserInfo.name}\n                                    onChange={handleInputChange}\n                                />\n                            ) : (\n                                <p>{userInfo.name}</p>\n                            )}\n                        </div>\n                        <div className=\"profile-field\">\n                            <label>Email:</label>\n                            {isEditing ? (\n                                <input\n                                    type=\"email\"\n                                    name=\"email\"\n                                    value={updatedUserInfo.email}\n                                    onChange={handleInputChange}\n                                />\n                            ) : (\n                                <p>{userInfo.email}</p>\n                            )}\n                        </div>\n                        <div className=\"profile-field\">\n                            <label>Phone Number:</label>\n                            {isEditing ? (\n                                <input\n                                    type=\"text\"\n                                    name=\"phoneNumber\"\n                                    value={updatedUserInfo.phoneNumber}\n                                    onChange={handleInputChange}\n                                />\n                            ) : (\n                                <p>{userInfo.phoneNumber}</p>\n                            )}\n                        </div>\n                        <button\n                            className=\"profile-button\"\n                            onClick={isEditing ? handleSaveClick : handleEditClick}\n                        >\n                            {isEditing ? \"Save\" : \"Edit\"}\n                        </button>\n                    </div>\n\n                    <div>\n                        <h3>Address</h3>\n                        {userInfo.address ? (\n                            <div>\n                                <p><strong>Street: </strong>{userInfo.address.street}</p>\n                                <p><strong>City: </strong>{userInfo.address.city}</p>\n                                <p><strong>State: </strong>{userInfo.address.state}</p>\n                                <p><strong>Zip Code: </strong>{userInfo.address.zipCode}</p>\n                                <p><strong>Country: </strong>{userInfo.address.country}</p>\n                            </div>\n                        ) : (\n                            <p>No Address information available</p>\n                        )}\n                        <button className=\"profile-button\" onClick={handleAddressClick}>\n                            {userInfo.address ? \"Edit Address\" : \"Add Address\"}\n                        </button>\n                    </div>\n\n                    <h3>Order History</h3>\n                    <ul>\n                        {paginatedOrders.map(order => (\n                            <li key={order.id}>\n                                <img src={order.product?.imageUrl} alt={order.product.name} />\n                                <div>\n                                    <p><strong>Name: </strong>{order.product.name}</p>\n                                    <p><strong>Status: </strong>{order.status}</p>\n                                    <p><strong>Quantity: </strong>{order.quantity}</p>\n                                    <p><strong>Price: </strong>{order.price.toFixed(2)}</p>\n                                </div>\n                            </li>\n                        ))}\n                    </ul>\n                    <Pagination\n                        currentPage={currentPage}\n                        totalPages={totalPages}\n                        onPageChange={(page) => setCurrentPage(page)}\n                    />\n                </div>\n            )}\n        </div>\n    );\n};\n\nexport default ProfilePage;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}