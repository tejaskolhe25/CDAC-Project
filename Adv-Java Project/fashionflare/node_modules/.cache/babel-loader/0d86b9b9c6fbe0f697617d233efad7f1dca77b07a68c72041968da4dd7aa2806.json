{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Tejas Kolhe\\\\Downloads\\\\ecommerce\\\\fashionflare\\\\src\\\\component\\\\pages\\\\LoginPage.jsx\",\n  _s = $RefreshSig$();\n// import React, { useState } from \"react\";\n// import { useNavigate } from \"react-router-dom\";\n// import ApiService from \"../../service/ApiService\";\n// import '../../style/register.css'\n\n// const LoginPage = () => {\n\n//     const [formData, setFormData] = useState({\n//         email: '',\n//         password: ''\n//     });\n\n//     const [message, setMessage] = useState(null);\n//     const navigate = useNavigate();\n\n//     const handleChange = (e) => {\n//         const { name, value } = e.target;\n//         setFormData({ ...formData, [name]: value });\n//     }\n\n//     const handleSubmit = async (e) => {\n//         e.preventDefault();\n//         try {\n//             const response = await ApiService.loginUser(formData);\n//             if (response.status === 200) {\n//                 setMessage(\"User Successfully Loged in\");\n//                 localStorage.setItem('token', response.token);\n//                 localStorage.setItem('role', response.role);\n//                 setTimeout(() => {\n//                     navigate(\"/profile\")\n//                 }, 4000)\n//             }\n//         } catch (error) {\n//             setMessage(error.response?.data.message || error.message || \"unable to Login a user\");\n//         }\n//     }\n\n//     return (\n//         <div className=\"register-page\">\n//             <h2>Login</h2>\n//             {message && <p className=\"message\">{message}</p>}\n//             <form onSubmit={handleSubmit}>\n//                 <label>Email: </label>\n//                 <input\n//                     type=\"email\"\n//                     name=\"email\"\n//                     value={formData.email}\n//                     onChange={handleChange}\n//                     required />\n\n//                 <label>Password: </label>\n//                 <input\n//                     type=\"password\"\n//                     name=\"password\"\n//                     value={formData.password}\n//                     onChange={handleChange}\n//                     required />\n\n//                     <button type=\"submit\">Login</button>\n\n//                     <p className=\"register-link\">\n//                         Don't have an account? <a href=\"/register\">Register</a>\n//                     </p>\n//             </form>\n//         </div>\n//     )\n// }\n\n// export default LoginPage;\n\nimport React, { useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport ApiService from \"../../service/ApiService\";\nimport '../../style/register.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst LoginPage = () => {\n  _s();\n  const [formData, setFormData] = useState({\n    email: '',\n    password: ''\n  });\n  const [message, setMessage] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const navigate = useNavigate();\n  const handleChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setFormData({\n      ...formData,\n      [name]: value\n    });\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    setLoading(true);\n    setMessage(null);\n    try {\n      const response = await ApiService.loginUser(formData);\n      if (response.status === 200) {\n        setMessage(\"User Successfully Logged in\");\n        localStorage.setItem('token', response.token);\n        localStorage.setItem('role', response.role);\n        setTimeout(() => {\n          navigate(\"/profile\");\n        }, 2000);\n      }\n    } catch (error) {\n      var _error$response;\n      setMessage(((_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.data.message) || error.message || \"Unable to log in\");\n    } finally {\n      setLoading(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"login-page\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 13\n    }, this), message && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: `message ${message.includes(\"Successfully\") ? \"success\" : \"error\"}`,\n      children: message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 25\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"email\",\n        children: \"Email: \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"email\",\n        id: \"email\",\n        name: \"email\",\n        value: formData.email,\n        onChange: handleChange,\n        required: true,\n        \"aria-describedby\": \"emailHelp\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n        id: \"emailHelp\",\n        className: \"form-text text-muted\",\n        children: \"We'll never share your email with anyone else.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"password\",\n        children: \"Password: \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        id: \"password\",\n        name: \"password\",\n        value: formData.password,\n        onChange: handleChange,\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        disabled: loading,\n        children: loading ? /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"spinner\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 32\n        }, this) : 'Login'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"register-link\",\n        children: [\"Don't have an account? \", /*#__PURE__*/_jsxDEV(\"a\", {\n          href: \"/register\",\n          children: \"Register\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 44\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 111,\n    columnNumber: 9\n  }, this);\n};\n_s(LoginPage, \"7ExdBwg8YoSKn6iuKG1qgJEXaG4=\", false, function () {\n  return [useNavigate];\n});\n_c = LoginPage;\nexport default LoginPage;\nvar _c;\n$RefreshReg$(_c, \"LoginPage\");","map":{"version":3,"names":["React","useState","useNavigate","ApiService","jsxDEV","_jsxDEV","LoginPage","_s","formData","setFormData","email","password","message","setMessage","loading","setLoading","navigate","handleChange","e","name","value","target","handleSubmit","preventDefault","response","loginUser","status","localStorage","setItem","token","role","setTimeout","error","_error$response","data","className","children","fileName","_jsxFileName","lineNumber","columnNumber","includes","onSubmit","htmlFor","type","id","onChange","required","disabled","href","_c","$RefreshReg$"],"sources":["C:/Users/Tejas Kolhe/Downloads/ecommerce/fashionflare/src/component/pages/LoginPage.jsx"],"sourcesContent":["// import React, { useState } from \"react\";\n// import { useNavigate } from \"react-router-dom\";\n// import ApiService from \"../../service/ApiService\";\n// import '../../style/register.css'\n\n\n// const LoginPage = () => {\n\n//     const [formData, setFormData] = useState({\n//         email: '',\n//         password: ''\n//     });\n\n//     const [message, setMessage] = useState(null);\n//     const navigate = useNavigate();\n\n\n//     const handleChange = (e) => {\n//         const { name, value } = e.target;\n//         setFormData({ ...formData, [name]: value });\n//     }\n\n//     const handleSubmit = async (e) => {\n//         e.preventDefault();\n//         try {\n//             const response = await ApiService.loginUser(formData);\n//             if (response.status === 200) {\n//                 setMessage(\"User Successfully Loged in\");\n//                 localStorage.setItem('token', response.token);\n//                 localStorage.setItem('role', response.role);\n//                 setTimeout(() => {\n//                     navigate(\"/profile\")\n//                 }, 4000)\n//             }\n//         } catch (error) {\n//             setMessage(error.response?.data.message || error.message || \"unable to Login a user\");\n//         }\n//     }\n\n//     return (\n//         <div className=\"register-page\">\n//             <h2>Login</h2>\n//             {message && <p className=\"message\">{message}</p>}\n//             <form onSubmit={handleSubmit}>\n//                 <label>Email: </label>\n//                 <input\n//                     type=\"email\"\n//                     name=\"email\"\n//                     value={formData.email}\n//                     onChange={handleChange}\n//                     required />\n                    \n//                 <label>Password: </label>\n//                 <input\n//                     type=\"password\"\n//                     name=\"password\"\n//                     value={formData.password}\n//                     onChange={handleChange}\n//                     required />\n\n//                     <button type=\"submit\">Login</button>\n                    \n//                     <p className=\"register-link\">\n//                         Don't have an account? <a href=\"/register\">Register</a>\n//                     </p>\n//             </form>\n//         </div>\n//     )\n// }\n\n// export default LoginPage;\n\nimport React, { useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport ApiService from \"../../service/ApiService\";\nimport '../../style/register.css';\n\nconst LoginPage = () => {\n    const [formData, setFormData] = useState({ email: '', password: '' });\n    const [message, setMessage] = useState(null);\n    const [loading, setLoading] = useState(false);\n    const navigate = useNavigate();\n\n    const handleChange = (e) => {\n        const { name, value } = e.target;\n        setFormData({ ...formData, [name]: value });\n    }\n\n    const handleSubmit = async (e) => {\n        e.preventDefault();\n        setLoading(true);\n        setMessage(null);\n        try {\n            const response = await ApiService.loginUser(formData);\n            if (response.status === 200) {\n                setMessage(\"User Successfully Logged in\");\n                localStorage.setItem('token', response.token);\n                localStorage.setItem('role', response.role);\n                setTimeout(() => {\n                    navigate(\"/profile\");\n                }, 2000);\n            }\n        } catch (error) {\n            setMessage(error.response?.data.message || error.message || \"Unable to log in\");\n        } finally {\n            setLoading(false);\n        }\n    }\n\n    return (\n        <div className=\"login-page\">\n            <h2>Login</h2>\n            {message && <p className={`message ${message.includes(\"Successfully\") ? \"success\" : \"error\"}`}>{message}</p>}\n            <form onSubmit={handleSubmit}>\n                <label htmlFor=\"email\">Email: </label>\n                <input\n                    type=\"email\"\n                    id=\"email\"\n                    name=\"email\"\n                    value={formData.email}\n                    onChange={handleChange}\n                    required\n                    aria-describedby=\"emailHelp\"\n                />\n                <small id=\"emailHelp\" className=\"form-text text-muted\">We'll never share your email with anyone else.</small>\n\n                <label htmlFor=\"password\">Password: </label>\n                <input\n                    type=\"password\"\n                    id=\"password\"\n                    name=\"password\"\n                    value={formData.password}\n                    onChange={handleChange}\n                    required\n                />\n\n                <button type=\"submit\" disabled={loading}>\n                    {loading ? <span className=\"spinner\"></span> : 'Login'}\n                </button>\n\n                <p className=\"register-link\">\n                    Don't have an account? <a href=\"/register\">Register</a>\n                </p>\n            </form>\n        </div>\n    )\n}\n\nexport default LoginPage;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}