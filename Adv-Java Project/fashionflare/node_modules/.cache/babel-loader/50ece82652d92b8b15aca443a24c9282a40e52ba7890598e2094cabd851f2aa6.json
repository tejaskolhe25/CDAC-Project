{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Tejas Kolhe\\\\Downloads\\\\ecommerce\\\\fashionflare\\\\src\\\\component\\\\pages\\\\CategoryListPage.jsx\",\n  _s = $RefreshSig$();\n// import React, { useState, useEffect } from \"react\";\n// import { useNavigate } from \"react-router-dom\";\n// import ApiService from \"../../service/ApiService\";\n// import '../../style/categoryListPage.css'\n\n// const CategoryListPage = () => {\n//     const [categories, setCategories] = useState([]);\n//     const [error, setError] = useState(null);\n//     const navigate = useNavigate();\n\n//     useEffect(() => {\n//         fetchCategories();\n//     }, []);\n\n//     const fetchCategories = async () => {\n//         try {\n//             const response = await ApiService.getAllCategory();\n//             setCategories(response.categoryList || [])\n\n//         } catch (err) {\n\n//             setError(err.response?.data?.message || err.message || 'Unable to fetch categories')\n\n//         }\n//     }\n\n//     const handleCategoryClick = (categoryId) => {\n//         navigate(`/category/${categoryId}`);\n//     } \n\n//     return(\n//         <div className=\"category-list\">\n//             {error ? (\n//                 <p className=\"error-message\">{error}</p>\n//             ):(\n//                 <div>\n//                     <h2>Categories</h2>\n//                     <ul>\n//                         {categories.map((category)=>(\n//                             <li key={category.id}>\n//                                 <button onClick={()=> handleCategoryClick(category.id)}>{category.name}</button>\n//                             </li>\n//                         ))}\n//                     </ul>\n//                 </div>\n//             )}\n//         </div>\n//     )\n// }\n\n// export default CategoryListPage;\n\nimport React, { useState, useEffect } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport ApiService from \"../../service/ApiService\";\nimport '../../style/categoryListPage.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CategoryListPage = () => {\n  _s();\n  const [categories, setCategories] = useState([]);\n  const [error, setError] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [searchTerm, setSearchTerm] = useState('');\n  const navigate = useNavigate();\n  useEffect(() => {\n    const fetchCategories = async () => {\n      try {\n        const response = await ApiService.getAllCategory();\n        setCategories(response.categoryList || []);\n      } catch (err) {\n        var _err$response, _err$response$data;\n        setError(((_err$response = err.response) === null || _err$response === void 0 ? void 0 : (_err$response$data = _err$response.data) === null || _err$response$data === void 0 ? void 0 : _err$response$data.message) || err.message || 'Unable to fetch categories');\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchCategories();\n  }, []);\n  const handleCategoryClick = categoryId => {\n    navigate(`/category/${categoryId}`);\n  };\n  const handleSearchChange = event => {\n    setSearchTerm(event.target.value.toLowerCase());\n  };\n  const filteredCategories = categories.filter(category => category.name.toLowerCase().includes(searchTerm));\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"loading-spinner\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 16\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"category-list\",\n    children: error ? /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"error-message\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Categories\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Search categories...\",\n        value: searchTerm,\n        onChange: handleSearchChange,\n        className: \"search-input\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: filteredCategories.map(category => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => handleCategoryClick(category.id),\n            \"aria-label\": `Go to ${category.name}`,\n            children: category.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 117,\n            columnNumber: 33\n          }, this)\n        }, category.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 29\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 17\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 101,\n    columnNumber: 9\n  }, this);\n};\n_s(CategoryListPage, \"cUBDrJBpJAzTwShRkRMs9YijaLU=\", false, function () {\n  return [useNavigate];\n});\n_c = CategoryListPage;\nexport default CategoryListPage;\nvar _c;\n$RefreshReg$(_c, \"CategoryListPage\");","map":{"version":3,"names":["React","useState","useEffect","useNavigate","ApiService","jsxDEV","_jsxDEV","CategoryListPage","_s","categories","setCategories","error","setError","loading","setLoading","searchTerm","setSearchTerm","navigate","fetchCategories","response","getAllCategory","categoryList","err","_err$response","_err$response$data","data","message","handleCategoryClick","categoryId","handleSearchChange","event","target","value","toLowerCase","filteredCategories","filter","category","name","includes","className","fileName","_jsxFileName","lineNumber","columnNumber","children","type","placeholder","onChange","map","onClick","id","_c","$RefreshReg$"],"sources":["C:/Users/Tejas Kolhe/Downloads/ecommerce/fashionflare/src/component/pages/CategoryListPage.jsx"],"sourcesContent":["// import React, { useState, useEffect } from \"react\";\n// import { useNavigate } from \"react-router-dom\";\n// import ApiService from \"../../service/ApiService\";\n// import '../../style/categoryListPage.css'\n\n// const CategoryListPage = () => {\n//     const [categories, setCategories] = useState([]);\n//     const [error, setError] = useState(null);\n//     const navigate = useNavigate();\n\n//     useEffect(() => {\n//         fetchCategories();\n//     }, []);\n\n\n\n\n//     const fetchCategories = async () => {\n//         try {\n//             const response = await ApiService.getAllCategory();\n//             setCategories(response.categoryList || [])\n\n//         } catch (err) {\n\n//             setError(err.response?.data?.message || err.message || 'Unable to fetch categories')\n\n//         }\n//     }\n\n//     const handleCategoryClick = (categoryId) => {\n//         navigate(`/category/${categoryId}`);\n//     } \n\n//     return(\n//         <div className=\"category-list\">\n//             {error ? (\n//                 <p className=\"error-message\">{error}</p>\n//             ):(\n//                 <div>\n//                     <h2>Categories</h2>\n//                     <ul>\n//                         {categories.map((category)=>(\n//                             <li key={category.id}>\n//                                 <button onClick={()=> handleCategoryClick(category.id)}>{category.name}</button>\n//                             </li>\n//                         ))}\n//                     </ul>\n//                 </div>\n//             )}\n//         </div>\n//     )\n// }\n\n// export default CategoryListPage;\n\n\nimport React, { useState, useEffect } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport ApiService from \"../../service/ApiService\";\nimport '../../style/categoryListPage.css';\n\nconst CategoryListPage = () => {\n    const [categories, setCategories] = useState([]);\n    const [error, setError] = useState(null);\n    const [loading, setLoading] = useState(true);\n    const [searchTerm, setSearchTerm] = useState('');\n    const navigate = useNavigate();\n\n    useEffect(() => {\n        const fetchCategories = async () => {\n            try {\n                const response = await ApiService.getAllCategory();\n                setCategories(response.categoryList || []);\n            } catch (err) {\n                setError(err.response?.data?.message || err.message || 'Unable to fetch categories');\n            } finally {\n                setLoading(false);\n            }\n        };\n\n        fetchCategories();\n    }, []);\n\n    const handleCategoryClick = (categoryId) => {\n        navigate(`/category/${categoryId}`);\n    };\n\n    const handleSearchChange = (event) => {\n        setSearchTerm(event.target.value.toLowerCase());\n    };\n\n    const filteredCategories = categories.filter(category =>\n        category.name.toLowerCase().includes(searchTerm)\n    );\n\n    if (loading) {\n        return <div className=\"loading-spinner\"></div>;\n    }\n\n    return (\n        <div className=\"category-list\">\n            {error ? (\n                <p className=\"error-message\">{error}</p>\n            ) : (\n                <div>\n                    <h2>Categories</h2>\n                    <input\n                        type=\"text\"\n                        placeholder=\"Search categories...\"\n                        value={searchTerm}\n                        onChange={handleSearchChange}\n                        className=\"search-input\"\n                    />\n                    <ul>\n                        {filteredCategories.map((category) => (\n                            <li key={category.id}>\n                                <button \n                                    onClick={() => handleCategoryClick(category.id)}\n                                    aria-label={`Go to ${category.name}`}\n                                >\n                                   \n                                    {category.name}\n                                </button>\n                            </li>\n                        ))}\n                    </ul>\n                </div>\n            )}\n        </div>\n    );\n};\n\nexport default CategoryListPage;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}